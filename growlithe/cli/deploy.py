"""
Module for deploying SAM (Serverless Application Model) applications.

This module provides functionality to deploy SAM applications using the AWS SAM CLI.
It includes error handling, output formatting, and support for Growlithe-generated templates.
"""

import subprocess
import click
import os


def deploy(config):
    """
    Run 'sam deploy' command to deploy the SAM application regenerated by growlithe.
    TODO: Extend this to make the interface build other types of application package

    This function executes the 'sam deploy' command in the appropriate directory,
    either the current directory or the Growlithe-generated template directory.
    It handles the deployment process, captures output, and provides formatted feedback.

    Args:
        config: Configuration object containing application settings.

    Raises:
        SystemExit: If the deployment process fails or if the SAM CLI is not installed.
    """
    command = ["sam", "deploy"]
    click.echo("Deploying the application with SAM...")

    if os.path.isfile(os.path.join(config.growlithe_path, "template.yaml")):
        click.echo("Deploying the application with Growlithe-generated template...")
        os.chdir(config.growlithe_path)

    try:
        # Run the sam deploy command
        result = subprocess.run(command, check=True, text=True, capture_output=True)

        # Print the output
        click.echo(result.stdout)

        if result.stderr:
            click.echo("Warnings/Errors:", err=True)
            click.echo(result.stderr, err=True)

        click.echo("Deployment completed successfully!", color="green")
    except subprocess.CalledProcessError as e:
        click.echo(f"Error during deployment: {e}", color="red")
        if e.output:
            click.echo("Deployment output:", err=True)
            click.echo(e.output, err=True)
        if e.stderr:
            click.echo("Error output:", err=True)
            click.echo(e.stderr, err=True)
        exit(1)
    except FileNotFoundError:
        click.echo(
            "Error: 'sam' command not found. Make sure AWS SAM CLI is installed and in your PATH.",
            color="red",
        )
        exit(1)
